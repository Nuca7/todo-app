{"version":3,"sources":["CircleIcon.js","App.js","index.js"],"names":["CircleIcon","show","className","size","color","App","useState","data","setData","currentData","setCurrentData","value","setValue","active","setActive","clear","val","filter","item","completed","useEffect","length","onSubmit","e","preventDefault","id","Date","now","title","type","spellCheck","placeholder","onChange","target","map","onClick","newData","toggleCompleted","removeFromTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3635113.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AiOutlineCheck } from \"react-icons/ai\";\r\n\r\nfunction CircleIcon({ show = false }) {\r\n  return (\r\n    <div className={`circleIcon ${show ? \"completed\" : \"\"}`}>\r\n      {show && <AiOutlineCheck size=\"0.8em\" color=\"white\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CircleIcon;\r\n","import React, { useState, useEffect } from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { VscAdd } from \"react-icons/vsc\";\nimport CircleIcon from \"./CircleIcon\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [currentData, setCurrentData] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [active, setActive] = useState(0);\n\n  useEffect(() => {\n    setCurrentData(data);\n    const active = data.filter((item) => item.completed === false);\n    setActive(active.length);\n  }, [data]);\n\n  function addInTodo(e) {\n    e.preventDefault();\n    if (!value) return;\n    setData([...data, { id: `${Date.now()}`, title: value, completed: false }]);\n    setValue(\"\");\n  }\n\n  function removeFromTodo(id) {\n    const newData = data.filter((item) => item.id !== id);\n    setData(newData);\n  }\n\n  function toggleCompleted(id) {\n    const newData = data.map((item) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      }\n      return item;\n    });\n    setData(newData);\n  }\n\n  function clear(val) {\n    if (val === \"completed\") {\n      const active = data.filter((item) => item.completed === false);\n      setData(active);\n    } else {\n      setData([]);\n    }\n  }\n\n  function show(val) {\n    if (val === \"all\") {\n      setCurrentData(data);\n    } else if (val === \"active\") {\n      const active = data.filter((item) => item.completed === false);\n      setCurrentData(active);\n    } else {\n      const completed = data.filter((item) => item.completed === true);\n      setCurrentData(completed);\n    }\n  }\n\n  return (\n    <main className=\"todo\">\n      <div className=\"title\">\n        <h1>TODO</h1>\n      </div>\n      <div className=\"addTodoBox\">\n        <CircleIcon />\n        <form onSubmit={addInTodo}>\n          <input\n            className=\"addTodoInput\"\n            type=\"text\"\n            spellCheck=\"false\"\n            placeholder=\"Create a new todo...\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <button type=\"submit\">\n            <VscAdd size=\"1.4em\" color=\"hsl(233, 14%, 35%)\" />\n          </button>\n        </form>\n      </div>\n      <ul className=\"todoList\">\n        {currentData.map((item) => {\n          const { id, title, completed } = item;\n          return (\n            <li key={id} className=\"listBox\">\n              <button onClick={() => toggleCompleted(id)}>\n                <CircleIcon show={completed} />\n              </button>\n              <div className=\"listContent\">\n                <p>{title}</p>\n                <button onClick={() => removeFromTodo(id)}>\n                  <AiOutlineClose size=\"1.4em\" color=\"hsl(233, 14%, 35%)\" />\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n      <div>\n        <div className=\"show\">\n          <p>{active} items left</p>\n          <button onClick={() => show(\"all\")}>All</button>\n          <button onClick={() => show(\"active\")}>Active</button>\n          <button onClick={() => show(\"completed\")}>Completed</button>\n        </div>\n        <div className=\"clear\">\n          <button onClick={() => clear(\"all\")}>Clear All</button>\n          <button onClick={() => clear(\"completed\")}>Clear Completed</button>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}