{"version":3,"sources":["context.js","icons/CircleIcon.js","components/AddTodoItem.js","components/TodoItems.js","components/ClearItems.js","components/ShowItems.js","components/TodoItemsManipulation.js","App.js","index.js"],"names":["MyContext","React","createContext","ContextProvider","children","useState","data","setData","currentData","setCurrentData","active","setActive","useEffect","filter","item","completed","length","Provider","value","useGlobalContext","useContext","CircleIcon","show","className","size","color","AddTodoItem","setValue","onSubmit","e","preventDefault","id","Date","now","title","type","spellCheck","placeholder","onChange","target","TodoItems","map","onClick","newData","toggleCompleted","removeFromTodo","ClearItems","clear","val","ShowItems","TodoItemsManipulation","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dcc47a2.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nconst MyContext = React.createContext();\r\n\r\nfunction ContextProvider({ children }) {\r\n  const [data, setData] = useState([]);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [active, setActive] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setCurrentData(data);\r\n    const active = data.filter((item) => item.completed === false);\r\n    setActive(active.length);\r\n  }, [data]);\r\n\r\n  return (\r\n    <MyContext.Provider\r\n      value={{\r\n        data,\r\n        setData,\r\n        currentData,\r\n        setCurrentData,\r\n        active,\r\n      }}\r\n    >\r\n      {children}\r\n    </MyContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useGlobalContext() {\r\n  return useContext(MyContext);\r\n}\r\n\r\nexport { ContextProvider, useGlobalContext };\r\n","import React from \"react\";\r\nimport { AiOutlineCheck } from \"react-icons/ai\";\r\n\r\nfunction CircleIcon({ show = false }) {\r\n  return (\r\n    <div className={`circleIcon ${show ? \"completed\" : \"\"}`}>\r\n      {show && <AiOutlineCheck size=\"0.8em\" color=\"white\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CircleIcon;\r\n","import React, { useState } from \"react\";\r\nimport { CircleIcon, VscAdd } from \"../icons\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nfunction AddTodoItem() {\r\n  const { data, setData } = useGlobalContext();\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  function addInTodo(e) {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    setData([...data, { id: `${Date.now()}`, title: value, completed: false }]);\r\n    setValue(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"addTodoItem\">\r\n      <CircleIcon />\r\n      <form onSubmit={addInTodo}>\r\n        <input\r\n          className=\"addTodoInput\"\r\n          type=\"text\"\r\n          spellCheck=\"false\"\r\n          placeholder=\"Create a new todo...\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n        />\r\n        <button type=\"submit\">\r\n          <VscAdd size=\"1.4em\" color=\"hsl(233, 14%, 35%)\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodoItem;\r\n","import React from \"react\";\r\nimport { CircleIcon, AiOutlineClose } from \"../icons\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nfunction TodoItems() {\r\n  const { data, setData, currentData } = useGlobalContext();\r\n\r\n  function removeFromTodo(id) {\r\n    const newData = data.filter((item) => item.id !== id);\r\n    setData(newData);\r\n  }\r\n\r\n  function toggleCompleted(id) {\r\n    const newData = data.map((item) => {\r\n      if (item.id === id) {\r\n        return {\r\n          ...item,\r\n          completed: !item.completed,\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n    setData(newData);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"todoItems\">\r\n      {currentData.map((item) => {\r\n        const { id, title, completed } = item;\r\n        return (\r\n          <li key={id} className=\"todoItem\">\r\n            <button onClick={() => toggleCompleted(id)}>\r\n              <CircleIcon show={completed} />\r\n            </button>\r\n            <div className=\"todoItemContent\">\r\n              <p className={`${completed ? \"completed\" : \"\"}`}>{title}</p>\r\n              <button onClick={() => removeFromTodo(id)}>\r\n                <AiOutlineClose size=\"1.4em\" color=\"hsl(233, 14%, 35%)\" />\r\n              </button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nfunction ClearItems() {\r\n  const { data, setData } = useGlobalContext();\r\n\r\n  function clear(val) {\r\n    if (val === \"completed\") {\r\n      const active = data.filter((item) => item.completed === false);\r\n      setData(active);\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"clear\">\r\n      <button onClick={() => clear(\"all\")}>Clear All</button>\r\n      <button onClick={() => clear(\"completed\")}>Clear Completed</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClearItems;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nfunction ShowItems() {\r\n  const { data, setCurrentData, active } = useGlobalContext();\r\n\r\n  function show(val) {\r\n    if (val === \"all\") {\r\n      setCurrentData(data);\r\n    } else if (val === \"active\") {\r\n      const active = data.filter((item) => item.completed === false);\r\n      setCurrentData(active);\r\n    } else {\r\n      const completed = data.filter((item) => item.completed === true);\r\n      setCurrentData(completed);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"show\">\r\n      <p>{active} items left</p>\r\n      <button onClick={() => show(\"all\")}>All</button>\r\n      <button onClick={() => show(\"active\")}>Active</button>\r\n      <button onClick={() => show(\"completed\")}>Completed</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowItems;\r\n","import React from \"react\";\r\nimport ClearItems from \"./ClearItems\";\r\nimport ShowItems from \"./ShowItems\";\r\n\r\nfunction TodoItemsManipulation() {\r\n  return (\r\n    <div>\r\n      <ShowItems />\r\n      <ClearItems />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItemsManipulation;\r\n","import React from \"react\";\nimport { ContextProvider } from \"./context\";\nimport AddTodoItem from \"./components/AddTodoItem\";\nimport TodoItems from \"./components/TodoItems\";\nimport TodoItemsManipulation from \"./components/TodoItemsManipulation\";\n\nfunction App() {\n  return (\n    <ContextProvider>\n      <main className=\"todo\">\n        <h1 className=\"title\">TODO</h1>\n        <AddTodoItem />\n        <TodoItems />\n        <TodoItemsManipulation />\n      </main>\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}